// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PriceRadar.Infrastructure;

#nullable disable

namespace PriceRadar.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PriceRadar.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bae1a401-84a9-4466-a8c3-aa466d3d3af0"),
                            Name = "Laptops"
                        },
                        new
                        {
                            Id = new Guid("90f90635-ddfc-4e8b-83d6-b723e5e6a46f"),
                            Name = "Smartphones"
                        },
                        new
                        {
                            Id = new Guid("fc2f9d79-82b3-4305-a0b1-7341f99ba26c"),
                            Name = "Monitors"
                        },
                        new
                        {
                            Id = new Guid("c6b1741f-2c71-4bfc-9d9e-b87b9cafbf61"),
                            Name = "Headphones"
                        },
                        new
                        {
                            Id = new Guid("aab69d60-609c-41be-8bd0-e8b90d4c43fd"),
                            Name = "Keyboards"
                        },
                        new
                        {
                            Id = new Guid("7676c6b7-e51a-4082-8a57-270800fd089c"),
                            Name = "Mouses"
                        });
                });

            modelBuilder.Entity("PriceRadar.Domain.Entities.Offer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreId");

                    b.HasIndex("Url")
                        .IsUnique();

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("PriceRadar.Domain.Entities.PriceHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("DiscountPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<DateTime>("LastPriceOnUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("OfferId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("PriceHistory");
                });

            modelBuilder.Entity("PriceRadar.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PriceRadar.Domain.Entities.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("99b698b7-ae46-4a2c-af66-d7155497caff"),
                            Name = "Alta",
                            Url = "https://alta.ge/?sl=en"
                        },
                        new
                        {
                            Id = new Guid("2509a6ea-b884-4f49-8b44-af7da9b7812c"),
                            Name = "Zoommer",
                            Url = "https://zoommer.ge/en"
                        },
                        new
                        {
                            Id = new Guid("8d779e8f-f6c5-46da-9eeb-5f749c7988ba"),
                            Name = "EliteElectronic",
                            Url = "https://ee.ge/"
                        });
                });

            modelBuilder.Entity("PriceRadar.Domain.Entities.Offer", b =>
                {
                    b.HasOne("PriceRadar.Domain.Entities.Product", "Product")
                        .WithMany("Offers")
                        .HasForeignKey("ProductId");

                    b.HasOne("PriceRadar.Domain.Entities.Store", "Store")
                        .WithMany("Offers")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("PriceRadar.Domain.Entities.PriceHistory", b =>
                {
                    b.HasOne("PriceRadar.Domain.Entities.Offer", "Offer")
                        .WithMany("PriceHistories")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PriceRadar.Domain.Entities.Product", b =>
                {
                    b.HasOne("PriceRadar.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PriceRadar.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PriceRadar.Domain.Entities.Offer", b =>
                {
                    b.Navigation("PriceHistories");
                });

            modelBuilder.Entity("PriceRadar.Domain.Entities.Product", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("PriceRadar.Domain.Entities.Store", b =>
                {
                    b.Navigation("Offers");
                });
#pragma warning restore 612, 618
        }
    }
}
